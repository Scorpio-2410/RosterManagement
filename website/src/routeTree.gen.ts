/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RostersIndexImport } from './routes/rosters.index'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const RostersIdLazyImport = createFileRoute('/rosters/$id')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const RostersIndexRoute = RostersIndexImport.update({
  path: '/rosters/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/rosters.index.lazy').then((d) => d.Route))

const RostersIdLazyRoute = RostersIdLazyImport.update({
  path: '/rosters/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/rosters.$id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/rosters/$id': {
      preLoaderRoute: typeof RostersIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/rosters/': {
      preLoaderRoute: typeof RostersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  LoginLazyRoute,
  RostersIdLazyRoute,
  RostersIndexRoute,
])

/* prettier-ignore-end */
